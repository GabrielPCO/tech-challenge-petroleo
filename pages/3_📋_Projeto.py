# libs gr√°ficas

import matplotlib.pyplot as plt

# Streamlit

import streamlit as st

# Carregamento de imagens por cach
@st.cache_data
def load_img(img):
    return plt.imread(img)

# Titulo de P√°gina
#st.title('An√°lise de dados: explorando dados de pre√ßo por barril do petr√≥leo bruto tipo Brent (Ipeadata)')

st.set_page_config(layout="centered",page_icon="üõ¢Ô∏è")

# C√≥digo para alinhar imagens expandidas no centro da tela e justificar textos
st.markdown(
    """
    <style>
        body {text-align: justify}
        button[title^=Exit]+div [data-testid=stImage]{
            text-align: center;
            display: block;
            margin-left: auto;
            margin-right: auto;
            width: 100%;
        }
    </style>
    """, unsafe_allow_html=True
)

'''
## O Projeto

Nesta p√°gina, disponibilizamos um diagrama do projeto utilizado em nossa pesquisa. Nele, demonstramos todos os processos involvidos desde a captura dos dados at√© a constru√ß√£o da aplica√ß√£o final com dashboard.

'''
st.image(load_img('Imagens/Projeto.png'), caption='Diagrama do projeto')
st.divider()
'''
## Detalhamento do projeto

A seguir, detalhamos cada etapa exibida no diagrama para um melhor entendimento sobre o processo como um todo:
'''

# Layout das etapas
tab0, tab1, tab2, tab3, tab4 = st.tabs(["Etapa 1",
                                        "Etapa 2",
                                        "Etapa 3",
                                        "Etapa 4",
                                        "Etapa 5"])

with tab0:
    '''
    ## Captura dos dados
    '''
    st.image(load_img('Imagens/webscraping.png'))
    '''

    Como mencionado anteriormente, utilizamos para nossa pesquisa a base de dados Ipeadata disponibilizada no site do Ipea. Como os dados do pre√ßo do barril de petr√≥leo s√£o atualizados constantemente de semana a semana, decidimos por criar um scrip em python para a captura dos dados.

    Esse script realiza semanalmente a raspagem dos dados disponibilizado no site, coletando-os a partir de uma grande tabela que cont√©m o hist√≥rico de pre√ßo do barril de petr√≥leo desde o ano de 1987 at√© os dias atuais.

    Esses dados s√£o, ent√£o, tratados e armazenados em um banco de dados Postgres e em um arquivo .csv para posterior confer√™ncia.
    '''
with tab1:
    '''
    ## Pr√©-processamento e an√°lise
    '''
    st.image(load_img('Imagens/processamento_analise.png'))
    '''

    Os dados coletados s√£o pr√©-processados para a posterior an√°lise e tamb√©m para a cria√ß√£o do nosso modelo de previs√µes do pre√ßo do barril de petr√≥leo. O pr√©-processamento √© uma etapa fundamental para a prepara√ß√£o, organiza√ß√£o e estrutura√ß√£o dos dados, assim garantimos que n√£o chegaremos a falsas conclus√µes e previs√µes por conta de valores faltantes, outliers, etc.

    Em seguida, os dados s√£o analisados em rela√ß√£o a diversos fatores que podem influenciar direta ou indiretamente a varia√ß√£o do pre√ßo do barril de petr√≥leo. Fatores como situa√ß√µes geopol√≠ticas, crises econ√¥micas e demanda global por energia.
    '''
with tab2:
    '''
    ## Modelo em Machine Learning
    '''
    st.image(load_img('Imagens/ml.png'))
    '''

    A pr√≥xima etapa √© criar um modelo em Machine Learning para a previs√£o do pre√ßo do barril de petr√≥leo. O modelo √© alimentado com os nossos dados pr√©-processados e, ent√£o, utilizamos o algoritmo XGBRegressor (Extreme Gradient Boosting Regressor) para o seu treinamento.

    Finalmente, salvamos o modelo em um arquivo .joblib para o posterior uso na constru√ß√£o dos dashboards em Power BI e streamlit.
    '''
with tab3:
    '''
    ## Dashboard
    '''
    st.image(load_img('Imagens/dashboard.png'))
    '''

    Para o dashboard, decidimos utilizar duas abordagens. Inicialmente, utilizamos o Power BI para sua constru√ß√£o. Power BI √© uma plataforma unificada e escalon√°vel para autoatendimento e BI (business intelligence). De maneira geral, o Power BI √© utilizado para a constru√ß√£o de relat√≥rios e pain√©is (dashboards). Eles re√∫nem informa√ß√µes visuais e din√¢micas acerca de conjuntos de dados (datasets), e tamb√©m trabalham com o processo de entrega desses resultados atrav√©s de plataformas, como a pr√≥pria web.

    Tamb√©m utilizamos Streamlit para a constru√ß√£ do dashboard. O Streamlit √© um framework desenvolvido em Python que torna poss√≠vel a cria√ß√£o de aplicativos elegantes para modelos de machine learning (aprendizagem de m√°quina) ou mesmo visualiza√ß√£o de dados para uma simples an√°lise explorat√≥ria de um dataset (conjunto de dados), o que o torna ideal para o nosso projeto.
    '''
with tab4:
    '''
    ## Conclus√£o

    Com todos esses processos funcionando em conjunto temos um produto de grande valor agregado em m√£os. Agora, as informa√ß√µes do pre√ßo do barril de petr√≥leo est√£o dispostas de forma clara, susinta, organizada e atualizada, gerando um maior conforto, agilidade e produtividade para o usu√°rio final.
    '''