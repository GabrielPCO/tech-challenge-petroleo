# libs gr√°ficas

import matplotlib.pyplot as plt

# Streamlit

import streamlit as st

# Carregamento de imagens por cach
@st.cache_data
def load_img(img):
    return plt.imread(img)

st.set_page_config(layout="centered",page_icon="üõ¢Ô∏è")

# C√≥digo para alinhar imagens expandidas no centro da tela e justificar textos
st.markdown(
    """
    <style>
        body {text-align: justify}
        button[title^=Exit]+div [data-testid=stImage]{
            text-align: center;
            display: block;
            margin-left: auto;
            margin-right: auto;
            width: 100%;
        }
    </style>
    """, unsafe_allow_html=True
)

'''
## O projeto

A seguir, √© ilustrado um diagrama de execu√ß√£o do Tech Challenge. Nele, s√£o demonstradas todas as etapas e processamentos envolvidos, desde a aquisi√ß√£o dos dados at√© a constru√ß√£o da aplica√ß√£o final com dashboard.

'''
st.image(load_img('Imagens/Projeto.png'), caption='Diagrama do projeto')
st.divider()
'''
## Etapas do projeto

Nesta se√ß√£o, as etapas do diagrama ser√£o detalhadas para um melhor entendimento do m√©todo aplicado no projeto:
'''

# Layout das etapas
tab0, tab1, tab2, tab3, tab4 = st.tabs(["Aquisi√ß√£o dos dados",
                                        "Pr√©-processamento e an√°lise",
                                        "Modelo de Machine Learning",
                                        "Dashboard",
                                        "Conclus√£o"])

with tab0:
    '''
    ## Aquisi√ß√£o dos dados
    '''
    st.image(load_img('Imagens/webscraping.png'))
    '''

    Como mencionado anteriormente, neste projeto foi utilizada a base de dados Ipeadata disponibilizada no site do Ipea. Como os dados do pre√ßo do barril de petr√≥leo s√£o atualizados constantemente de semana a semana, um script em python foi criada para realizar a aquisi√ß√£o recorrente dos dados mais atualizados.

    Esse script realiza semanalmente a raspagem dos dados disponibilizado no site, coletando-os a partir de uma grande tabela que cont√©m o hist√≥rico de pre√ßo do barril de petr√≥leo desde o ano de 1987 at√© o presente.

    Depois, esta base de dados √© tratada e armazenada em um banco de dados Postgres e em um arquivo .csv para posterior confer√™ncia.
    '''
with tab1:
    '''
    ## Pr√©-processamento e an√°lise
    '''
    st.image(load_img('Imagens/processamento_analise.png'))
    '''

    Ap√≥s a aquisi√ß√£o, os dados foram pr√©-processados para a posterior an√°lise e tamb√©m para a cria√ß√£o do modelo que busca prever o pre√ßo do barril de petr√≥leo. O pr√©-processamento √© uma etapa fundamental para a prepara√ß√£o, organiza√ß√£o e estrutura√ß√£o dos dados, assim h√° maior confiabilidade nas previs√µes e conclus√µes do modelo, considerando ocorr√™ncia de valores faltantes, outliers, etc.

    Em seguida, foi realizada uma an√°lise explorat√≥ria dos dados com rela√ß√£o a diversos fatores que podem influenciar direta ou indiretamente a varia√ß√£o do pre√ßo do barril de petr√≥leo. Fatores como situa√ß√µes geopol√≠ticas, crises econ√¥micas e demanda global por energia foram analisados. Nesta etapa, foi realizado o c√°lculo de medidas descritivas, a plotagem de gr√°ficos e a constru√ß√£o de um dashboard em PowerBI.
    '''
with tab2:
    '''
    ## Modelo de Machine Learning
    '''
    st.image(load_img('Imagens/ml.png'))
    '''

    A etapa seguinte consistiu na cria√ß√£o de um modelo de Machine Learning para a previs√£o do pre√ßo do barril de petr√≥leo. O modelo os dados pr√©-processados na etapa anterior e, ent√£o, o algoritmo XGBRegressor (Extreme Gradient Boosting Regressor) √© aplicada no treinamento.

    Por fim, o modelo foi salvo em um arquivo .json para o posterior uso na constru√ß√£o dos dashboards em Power BI e streamlit.
    '''
with tab3:
    '''
    ## Dashboard
    '''
    st.image(load_img('Imagens/dashboard.png'))
    '''

    Um segundo dashboard foi constru√≠do utilizando as pr√≥prias ferramentas do Streamlit, com o objetivo de apresentar os resultados do modelo de Machine Learning de maneira simples e eficaz. O Streamlit √© um framework desenvolvido em Python que torna poss√≠vel a cria√ß√£o de aplicativos elegantes para modelos de machine learning (aprendizagem de m√°quina) ou mesmo visualiza√ß√£o de dados para uma simples an√°lise explorat√≥ria de um dataset (conjunto de dados), o que o torna ideal para o presente projeto.
    '''
with tab4:
    '''
    ## Conclus√£o

    Com todos esses processos funcionando em conjunto, tem-se um produto de grande valor agregado. Agora, as informa√ß√µes do pre√ßo do barril de petr√≥leo est√£o dispostas de forma clara, sucinta, organizada e atualizada, gerando um maior conforto, agilidade e produtividade para o usu√°rio final.
    '''